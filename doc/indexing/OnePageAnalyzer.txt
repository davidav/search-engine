класс OnePageAnalyzer

На входе через конструктор:
URL - адрес страницы, 
SitesConfig - конфигурация сайтов
LemmaFinder - лемматизатор,
SiteRepository, PageRepository, LemmaRepository, IndexRepository - репо

все это приходит из IndexingServiceImpl

- проверяем есть ли такой сайт в конфиге, если нет то выбрасываем исключение с сообщением "siteConfig not found"
- формируем SiteEntity site из конфига
	- если в SiteRepository нет сайта с таким url, то записываем в репо site и его возвращаем
	- если в SiteRepository есть сайт с таким url, то его и возвращаем
- проверяем если в PageRepository есть страница с таким url, тогда по PageId находим все Index в IndexRepository,
а затем получаем по lemmaId все Lemma из LemmaRepository
	- корректируем данные экземпляров Lemma:
		- если значение поля frequency больше 1 ,то из него вычитаем 1 a сам экземпляр Lemma
		вносим в список на корректировку
		- если значение поля frequency не больше 1 ,то экземпляр Lemma вносим в список на удаление
	- пакетно обновляем LemmaRepository используя список на корректировку
	- пакетно удаляем из IndexRepository все экземпляры с PageId
	- пакетно удаляем из LemmaRepository используя список на удаление
	- удаляем из PageRepository страницу  
- с помощью библиотеки Jsoup парсим страницу, формируем PageEntity и сохраняем в БД
- с помощью лемматизатора из контента страницы извлекаем леммы и их количество в виде Map<String, Float>
- в результате преобразования Map получаем сэт лемм на основании которого создаем список объектов Lemma
и пакетно сохраняем в БД
- создаем список объектов Index и пакетно сохраняем в БД
- выводим в лог окончание анализа страницы
 
