класс SearchServiceImpl

На входе через конструктор:
LemmaFinder - лемматизатор,
SiteRepository, PageRepository, LemmaRepository, IndexRepository - репо

все это приходит из ApiController

- проверяем запрос на пустоту, если пустой - выбрасываем исключение "Задан пустой поисковый запрос"
- проверяем что сайты проиндексированы, если нет - выбрасываем исключение "Сайты не проиндексированы"
- проверяем что сайт проиндексирован, если нет - выбрасываем исключение "Заданый сайт не проиндесирован"
- формируем список сайтов для поиска, если в запросе:
	- url сайта не задан, то включаем в список все сайты из SiteRepository
	- url сайта задан, то включаем в список только указанный сайт 
- формируем список поисковых запросов (SearchRequest):
	- с помощью лемматизатора преобразовывем строку запроса query в сэт лемм
	- для каждого сайта из списка для поиска формируем экземпляр SearchRequest и добавляем его в список запросов
- формируем задачи (SearchSiteAnalyzer) для FixedThreadPool, в котором инициализируем столько нитей, сколько сайтов в списке для поиска  
- передаем задачи в FixedThreadPool, в ответ получаем List<Future<Boolean>> и всех ждем результатов (f.get)
- выключаем FixedThreadPool
- формируем count - количество результатов
- сортируем результаты по relevance
- формируем data - нарезаем результаты в соответствии с параметрами в запросе (offset, limit)
- выводим в лог окончание поиска
- возвращаем ResultDTO(true, count, data) 