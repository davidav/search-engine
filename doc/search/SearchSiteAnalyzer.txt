класс SearchSiteAnalyzer

На входе через конструктор:
SearchRequest - объект поискового запроса (сэт лемм,...)
CopyOnWriteArraySet<SearchResult> - сет объектов содержащих результаты поиска
LemmaFinder - лемматизатор,
SiteRepository, PageRepository, LemmaRepository, IndexRepository - репо

все это приходит из SearchServiceImpl

- из LemmaRepository получаем список Lemma по lemma из сэта поискового запроса
- если размер списка == 0 то возвращаем false и выходим
- с помощью Stream преобразуем список Lemma в список id, затем получаем из IndexRepository список Index по lemmaId
- формируем список id для получения страниц из PageRepository, для чего считаем колво Index на страницу, если это количество совпадет с количеством лемм, значит все леммы присутствуют на этой странице и id страницы добавляем в список получения страниц
- получаем список страниц из PageRepository по списку id
- если размер списка == 0 то возвращаем false и выходим
- расчитываем релевантность страниц:
	- маппим PageEntity в PageModel
	- вычисляем и заносим в поле absRelevance объектов PageModel абсолютную релевантность страниц - сумма полей rank объектов Index связанных с этой страницей (по pageId), попутно вычисляем maxAbsRelevance максимальное значение абсолютной релевантности
	- вычисляем и заносим в поле relevance объектов PageModel относительную релевантность - отношение absRelevance/maxAbsRelevance
- формируем сет с результатами поиска SearchResult
	для каждого объекта PageModel:
		- с помощью библиотеки Jsoup парсим контент - на выходе Document
		- достаем из Document title
		- формируем снипет:
			- преобразовываем содержимое "body" из Document в массив русских слов
			- с помощью лемматизатора каждое слово из массива преобразовываем в лемму
			- если лемма слова из массива совпадает с леммой из запроса, то при первом совпадении формируем снипет, при следующих - подсчитываем совпадения
				формирование снипета:
				- находим в контенте PageModel индекс первого символа совпавшего слова
				- из контента вырезаем снипет -100 +150 символов от индекса
				- в снипете окружаем тегами <b></b> совпавшее слово
				- возвращаем снипет
		- формируем SearchResult
- если размер сета == 0 то возвращаем false и выходим
- добавляем сет в общий сет объектов содержащих результаты поиска
